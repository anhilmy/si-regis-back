basePath: /api/1
definitions:
  request.ReqKategori:
    properties:
      is_active:
        example: "false"
        type: string
      nama:
        type: string
    required:
    - is_active
    - nama
    type: object
  request.ReqKegiatan:
    properties:
      desc:
        type: string
      judul:
        type: string
      kategori:
        $ref: '#/definitions/request.ReqKegiatanKategori'
      no_surat:
        type: string
    required:
    - judul
    - kategori
    type: object
  request.ReqKegiatanKategori:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  response.Kategori:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      nama:
        type: string
    type: object
  response.Kegiatan:
    properties:
      desc:
        type: string
      id:
        type: integer
      judul:
        type: string
      kategori:
        $ref: '#/definitions/response.KegiatanKategori'
      no_surat:
        type: string
    type: object
  response.KegiatanKategori:
    properties:
      ID:
        type: integer
      nama:
        type: string
    type: object
  response.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: hilmyahmadnaufal@gmail.com
    name: anhilmy
  description: Endpoint SIREG Kegiatan Kategori
  title: SIREG Kegiatan Kategori
  version: "0.1"
paths:
  /:
    get:
      consumes:
      - application/json
      description: do piing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Object
      summary: ping example
      tags:
      - example
  /kategori/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.Kategori'
                  type: array
              type: object
      summary: get all kategoris
      tags:
      - kategori
    post:
      consumes:
      - application/json
      parameters:
      - description: create new kategori
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ReqKategori'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.Kategori'
              type: object
      summary: create kategori
      tags:
      - kategori
  /kategori/{kategoriId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id kategori
        in: path
        name: kategoriId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
      summary: delete kategori
      tags:
      - kategori
    get:
      consumes:
      - application/json
      parameters:
      - description: id kategori
        in: path
        name: kategoriId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.Kategori'
              type: object
      summary: get kategori
      tags:
      - kategori
    patch:
      consumes:
      - application/json
      parameters:
      - description: create new kategori
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ReqKategori'
      - description: id kategori
        in: path
        name: kategoriId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
      summary: create kategori
      tags:
      - kategori
  /kegiatan/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.Kegiatan'
                  type: array
              type: object
      summary: get all kegiatan
      tags:
      - kegiatan
    post:
      consumes:
      - application/json
      parameters:
      - description: create new kegiatan
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ReqKegiatan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.Kegiatan'
              type: object
      summary: create kegiatan
      tags:
      - kegiatan
  /kegiatan/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id kegiatan
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
      summary: delete kegiatan
      tags:
      - kegiatan
    get:
      consumes:
      - application/json
      parameters:
      - description: id kegiatan
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.Kegiatan'
              type: object
      summary: get kegiatan
      tags:
      - kegiatan
    patch:
      consumes:
      - application/json
      parameters:
      - description: create new kegiatan
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ReqKegiatan'
      - description: id kegiatan
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.Kegiatan'
              type: object
      summary: create kegiatan
      tags:
      - kegiatan
  /kegiatan/summary:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
      summary: group kegiatan
      tags:
      - kegiatan
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
